name: 'Nimbloo Deploy Notifier'
description: 'Send Slack and Email notifications for deployments'
author: 'Nimbloo'

branding:
  icon: 'bell'
  color: 'blue'

inputs:
  project_name:
    description: 'Project name (e.g., "Billing", "DCR API", "Auth Service")'
    required: false
    default: ${{ github.repository }}

  stage:
    description: 'Deployment stage (dev/hml/prd). Auto-detected from branch if not provided.'
    required: false
    default: ''

  version:
    description: 'Application version. Auto-detected from pom.xml or package.json if not provided.'
    required: false
    default: ''

  status:
    description: 'Deployment status (started/success/failed). Auto-detected from job status if not provided.'
    required: false
    default: ''

  stack_name:
    description: 'CloudFormation stack name'
    required: false
    default: ''

  aws_region:
    description: 'AWS region'
    required: false
    default: 'us-east-1'

  slack_webhook_url:
    description: 'Slack webhook URL (can also use repository variable SLACK_WEBHOOK_URL)'
    required: false
    default: ''

  notification_email:
    description: 'Email address to send notifications (can also use repository variable NOTIFICATION_EMAIL)'
    required: false
    default: ''

  notification_email_from:
    description: 'Sender email address (can also use repository variable NOTIFICATION_EMAIL_FROM)'
    required: false
    default: ''

  custom_message:
    description: 'Additional custom message to include in notifications'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Setup notification environment
      shell: bash
      run: |
        set -euo pipefail

        # Auto-detect project name
        PROJECT_NAME="${{ inputs.project_name }}"
        if [ -z "$PROJECT_NAME" ] || [[ "$PROJECT_NAME" == *"/"* ]]; then
          PROJECT_NAME=$(basename "${{ github.repository }}")
        fi
        echo "PROJECT_NAME=${PROJECT_NAME}" >> "$GITHUB_ENV"

        # Auto-detect stage from branch
        STAGE="${{ inputs.stage }}"
        if [ -z "$STAGE" ]; then
          case "${{ github.ref_name }}" in
            master|main) STAGE="prd" ;;
            staging|homolog) STAGE="hml" ;;
            develop|dev) STAGE="dev" ;;
            *) STAGE="dev" ;;
          esac
        fi
        echo "STAGE=${STAGE}" >> "$GITHUB_ENV"

        # Auto-detect version
        VERSION="${{ inputs.version }}"
        if [ -z "$VERSION" ]; then
          if [ -f "pom.xml" ]; then
            VERSION=$(grep -oP '<version>\K[^<]+' pom.xml | head -1 || echo "unknown")
          elif [ -f "package.json" ]; then
            VERSION=$(grep -oP '"version":\s*"\K[^"]+' package.json || echo "unknown")
          else
            VERSION="unknown"
          fi
        fi
        echo "VERSION=${VERSION}" >> "$GITHUB_ENV"

        # Auto-detect status
        STATUS="${{ inputs.status }}"
        if [ -z "$STATUS" ]; then
          if [ "${{ job.status }}" == "success" ]; then
            STATUS="success"
          elif [ "${{ job.status }}" == "failure" ]; then
            STATUS="failed"
          else
            STATUS="started"
          fi
        fi
        echo "STATUS=${STATUS}" >> "$GITHUB_ENV"

        # Stack name
        STACK_NAME="${{ inputs.stack_name }}"
        if [ -z "$STACK_NAME" ]; then
          STACK_NAME="${PROJECT_NAME}-${STAGE}"
        fi
        echo "STACK_NAME=${STACK_NAME}" >> "$GITHUB_ENV"

        # AWS Region
        echo "AWS_REGION=${{ inputs.aws_region }}" >> "$GITHUB_ENV"

        # Webhook/Email configs
        SLACK_WEBHOOK="${{ inputs.slack_webhook_url }}"
        echo "SLACK_WEBHOOK=${SLACK_WEBHOOK}" >> "$GITHUB_ENV"

        NOTIFICATION_EMAIL="${{ inputs.notification_email }}"
        echo "NOTIFICATION_EMAIL=${NOTIFICATION_EMAIL}" >> "$GITHUB_ENV"

        NOTIFICATION_EMAIL_FROM="${{ inputs.notification_email_from }}"
        echo "NOTIFICATION_EMAIL_FROM=${NOTIFICATION_EMAIL_FROM}" >> "$GITHUB_ENV"

        # Custom message
        echo "CUSTOM_MESSAGE=${{ inputs.custom_message }}" >> "$GITHUB_ENV"

        echo "‚úÖ Notification config loaded:"
        echo "  Project: ${PROJECT_NAME}"
        echo "  Stage: ${STAGE}"
        echo "  Version: ${VERSION}"
        echo "  Status: ${STATUS}"
        echo "  Stack: ${STACK_NAME}"

    - name: Send Slack notification
      if: env.SLACK_WEBHOOK != ''
      shell: bash
      run: |
        set +e  # Don't fail the job if notification fails

        # Determine emoji and color based on status
        case "$STATUS" in
          "started")
            EMOJI="üöÄ"
            COLOR="#3b82f6"
            STATUS_TEXT="Deploy Iniciado"
            ;;
          "success")
            if [ "$STAGE" == "prd" ]; then
              EMOJI="üéâ"
            else
              EMOJI="‚úÖ"
            fi
            COLOR="#10b981"
            STATUS_TEXT="Deploy Conclu√≠do com Sucesso"
            ;;
          "failed")
            EMOJI="‚ùå"
            COLOR="#ef4444"
            STATUS_TEXT="Deploy Falhou"
            ;;
          *)
            EMOJI="‚ÑπÔ∏è"
            COLOR="#6b7280"
            STATUS_TEXT="Deploy Update"
            ;;
        esac

        # Build custom message field
        CUSTOM_FIELD=""
        if [ -n "$CUSTOM_MESSAGE" ]; then
          CUSTOM_FIELD=",{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"üí¨ *Mensagem:* $CUSTOM_MESSAGE\"}}"
        fi

        # Dashboard and Lambda URLs
        DASHBOARD_URL="https://console.aws.amazon.com/cloudwatch/home?region=${AWS_REGION}#dashboards:name=${STACK_NAME}"
        LAMBDA_URL="https://console.aws.amazon.com/lambda/home?region=${AWS_REGION}#/functions/${STACK_NAME}"
        LOGS_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

        # Build actions based on status
        if [ "$STATUS" == "success" ]; then
          ACTIONS="\"type\":\"actions\",\"elements\":[{\"type\":\"button\",\"text\":{\"type\":\"plain_text\",\"text\":\"üìä Dashboard\"},\"url\":\"${DASHBOARD_URL}\"},{\"type\":\"button\",\"text\":{\"type\":\"plain_text\",\"text\":\"‚ö° Lambda\"},\"url\":\"${LAMBDA_URL}\"},{\"type\":\"button\",\"text\":{\"type\":\"plain_text\",\"text\":\"üìã Logs\"},\"url\":\"${LOGS_URL}\"}]"
        else
          ACTIONS="\"type\":\"actions\",\"elements\":[{\"type\":\"button\",\"text\":{\"type\":\"plain_text\",\"text\":\"üîç Ver Logs\"},\"url\":\"${LOGS_URL}\",\"style\":\"danger\"}]"
        fi
        # Get commit short SHA
        COMMIT_SHA="${{ github.sha }}"
        COMMIT_SHORT="${COMMIT_SHA:0:7}"

        curl -X POST "$SLACK_WEBHOOK" \
          -H 'Content-Type: application/json' \
          -d "{
            \"text\": \"${EMOJI} *${STATUS_TEXT} - ${PROJECT_NAME}*\",
            \"blocks\": [
              {
                \"type\": \"section\",
                \"text\": {
                  \"type\": \"mrkdwn\",
                  \"text\": \"${EMOJI} *${STATUS_TEXT}*\\n*Project:* \\\`${PROJECT_NAME}\\\`\\n*Environment:* \\\`${STAGE}\\\`\\n*Version:* \\\`${VERSION}\\\`\\n*Branch:* \\\`${{ github.ref_name }}\\\`\\n*Actor:* ${{ github.actor }}\\n*Commit:* <https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${COMMIT_SHORT}>\"
                }
              },
              {
                \"type\": \"section\",
                \"fields\": [
                  {
                    \"type\": \"mrkdwn\",
                    \"text\": \"*Stack:* \\\`${STACK_NAME}\\\`\"
                  },
                  {
                    \"type\": \"mrkdwn\",
                    \"text\": \"*Region:* \\\`${AWS_REGION}\\\`\"
                  }
                ]
              }${CUSTOM_FIELD},
              {
                ${ACTIONS}
              }
            ]
          }" && echo "‚úÖ Slack notification sent" || echo "‚ö†Ô∏è Failed to send Slack notification (ignored)"

    - name: Send Email notification
      if: env.NOTIFICATION_EMAIL != ''
      shell: bash
      run: |
        set +e  # Don't fail the job if notification fails

        # Determine subject and emoji
        case "$STATUS" in
          "started")
            EMOJI="üöÄ"
            SUBJECT="${EMOJI} ${PROJECT_NAME} [${STAGE}] v${VERSION} - Deploy Iniciado"
            ;;
          "success")
            if [ "$STAGE" == "prd" ]; then
              EMOJI="üéâ"
            else
              EMOJI="‚úÖ"
            fi
            SUBJECT="${EMOJI} ${PROJECT_NAME} [${STAGE}] v${VERSION} - Deploy Sucesso"
            ;;
          "failed")
            EMOJI="‚ùå"
            SUBJECT="${EMOJI} ${PROJECT_NAME} [${STAGE}] v${VERSION} - Deploy FALHOU"
            ;;
          *)
            EMOJI="‚ÑπÔ∏è"
            SUBJECT="${EMOJI} ${PROJECT_NAME} [${STAGE}] v${VERSION} - Update"
            ;;
        esac

        # Determine color
        case "${STAGE}" in
          "dev") ENV_COLOR="#3b82f6" ;;
          "hml") ENV_COLOR="#f59e0b" ;;
          "prd") ENV_COLOR="#10b981" ;;
          *) ENV_COLOR="#6b7280" ;;
        esac

        # URLs and GitHub info
        DASHBOARD_URL="https://console.aws.amazon.com/cloudwatch/home?region=${AWS_REGION}#dashboards:name=${STACK_NAME}"
        COMMIT_URL="https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
        COMMIT_SHA="${{ github.sha }}"
        COMMIT_SHORT="${COMMIT_SHA:0:7}"
        LOGS_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        GITHUB_REF_NAME="${{ github.ref_name }}"
        GITHUB_ACTOR="${{ github.actor }}"

        # Build HTML email with proper layout
        if [ "$STATUS" == "success" ]; then
          HTML=$(cat <<EOF
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body style="margin: 0; padding: 0; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif; background-color: #f3f4f6;">
  <table width="100%" cellpadding="0" cellspacing="0" style="background-color: #f3f4f6; padding: 40px 20px;">
    <tr>
      <td align="center">
        <table width="600" cellpadding="0" cellspacing="0" style="background-color: #ffffff; border-radius: 8px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);">
          <tr>
            <td style="padding: 40px;">
              <table width="100%" cellpadding="0" cellspacing="0">
                <tr>
                  <td style="padding-bottom: 30px;">
                    <h1 style="margin: 0; font-size: 24px; font-weight: 700; color: #111827;">
                      ${EMOJI} Deploy Conclu√≠do com Sucesso
                    </h1>
                  </td>
                </tr>
                <tr>
                  <td style="padding-bottom: 20px;">
                    <div style="background-color: ${ENV_COLOR}; padding: 3px 12px; border-radius: 4px; display: inline-block;">
                      <span style="color: #ffffff; font-weight: 600; font-size: 12px; text-transform: uppercase;">${STAGE}</span>
                    </div>
                  </td>
                </tr>
                <tr>
                  <td style="padding-bottom: 30px;">
                    <table width="100%" cellpadding="8" cellspacing="0" style="border: 1px solid #e5e7eb; border-radius: 6px;">
                      <tr style="background-color: #f9fafb;">
                        <td style="font-weight: 600; color: #374151; width: 140px;">Project</td>
                        <td style="color: #6b7280;"><code style="background-color: #f3f4f6; padding: 2px 6px; border-radius: 3px; font-size: 13px;">${PROJECT_NAME}</code></td>
                      </tr>
                      <tr>
                        <td style="font-weight: 600; color: #374151;">Version</td>
                        <td style="color: #6b7280;"><code style="background-color: #f3f4f6; padding: 2px 6px; border-radius: 3px; font-size: 13px;">${VERSION}</code></td>
                      </tr>
                      <tr style="background-color: #f9fafb;">
                        <td style="font-weight: 600; color: #374151;">Stack</td>
                        <td style="color: #6b7280;"><code style="background-color: #f3f4f6; padding: 2px 6px; border-radius: 3px; font-size: 13px;">${STACK_NAME}</code></td>
                      </tr>
                      <tr>
                        <td style="font-weight: 600; color: #374151;">Region</td>
                        <td style="color: #6b7280;"><code style="background-color: #f3f4f6; padding: 2px 6px; border-radius: 3px; font-size: 13px;">${AWS_REGION}</code></td>
                      </tr>
                      <tr style="background-color: #f9fafb;">
                        <td style="font-weight: 600; color: #374151;">Branch</td>
                        <td style="color: #6b7280;"><code style="background-color: #f3f4f6; padding: 2px 6px; border-radius: 3px; font-size: 13px;">${GITHUB_REF_NAME}</code></td>
                      </tr>
                      <tr>
                        <td style="font-weight: 600; color: #374151;">Deployed by</td>
                        <td style="color: #6b7280;">${GITHUB_ACTOR}</td>
                      </tr>
                      <tr style="background-color: #f9fafb;">
                        <td style="font-weight: 600; color: #374151;">Commit</td>
                        <td style="color: #6b7280;"><a href="${COMMIT_URL}" style="color: #3b82f6; text-decoration: none;">${COMMIT_SHORT}</a></td>
                      </tr>
                    </table>
                  </td>
                </tr>
                <tr>
                  <td style="padding-top: 20px;">
                    <table cellpadding="0" cellspacing="0">
                      <tr>
                        <td style="padding-right: 10px;">
                          <a href="${DASHBOARD_URL}" style="display: inline-block; background-color: #3b82f6; color: #ffffff; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: 600; font-size: 14px;">
                            üìä Ver Dashboard
                          </a>
                        </td>
                        <td>
                          <a href="${LOGS_URL}" style="display: inline-block; background-color: #6b7280; color: #ffffff; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: 600; font-size: 14px;">
                            üìã Ver Logs
                          </a>
                        </td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </td>
          </tr>
          <tr>
            <td style="padding: 20px; text-align: center; color: #9ca3af; font-size: 12px; border-top: 1px solid #e5e7eb;">
              Nimbloo Platform ¬∑ Deploy Automation
            </td>
          </tr>
        </table>
      </td>
    </tr>
  </table>
</body>
</html>
EOF
)
        else
          HTML=$(cat <<EOF
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body style="margin: 0; padding: 0; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif; background-color: #f3f4f6;">
  <table width="100%" cellpadding="0" cellspacing="0" style="background-color: #f3f4f6; padding: 40px 20px;">
    <tr>
      <td align="center">
        <table width="600" cellpadding="0" cellspacing="0" style="background-color: #ffffff; border-radius: 8px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); border-left: 4px solid #ef4444;">
          <tr>
            <td style="padding: 40px;">
              <table width="100%" cellpadding="0" cellspacing="0">
                <tr>
                  <td style="padding-bottom: 30px;">
                    <h1 style="margin: 0; font-size: 24px; font-weight: 700; color: #dc2626;">
                      ‚ùå Deploy Falhou
                    </h1>
                  </td>
                </tr>
                <tr>
                  <td style="padding-bottom: 20px;">
                    <div style="background-color: #fef2f2; padding: 16px; border-radius: 6px; border-left: 3px solid #ef4444;">
                      <p style="margin: 0; color: #991b1b; font-weight: 600;">‚ö†Ô∏è A√ß√£o Necess√°ria</p>
                      <p style="margin: 8px 0 0 0; color: #dc2626; font-size: 14px;">O deploy falhou. Verifique os logs para detalhes do erro.</p>
                    </div>
                  </td>
                </tr>
                <tr>
                  <td style="padding-bottom: 30px;">
                    <table width="100%" cellpadding="8" cellspacing="0" style="border: 1px solid #e5e7eb; border-radius: 6px;">
                      <tr style="background-color: #f9fafb;">
                        <td style="font-weight: 600; color: #374151; width: 140px;">Project</td>
                        <td style="color: #6b7280;"><code style="background-color: #f3f4f6; padding: 2px 6px; border-radius: 3px; font-size: 13px;">${PROJECT_NAME}</code></td>
                      </tr>
                      <tr>
                        <td style="font-weight: 600; color: #374151;">Environment</td>
                        <td style="color: #6b7280;"><code style="background-color: #f3f4f6; padding: 2px 6px; border-radius: 3px; font-size: 13px;">${STAGE}</code></td>
                      </tr>
                      <tr style="background-color: #f9fafb;">
                        <td style="font-weight: 600; color: #374151;">Version</td>
                        <td style="color: #6b7280;"><code style="background-color: #f3f4f6; padding: 2px 6px; border-radius: 3px; font-size: 13px;">${VERSION}</code></td>
                      </tr>
                      <tr>
                        <td style="font-weight: 600; color: #374151;">Branch</td>
                        <td style="color: #6b7280;"><code style="background-color: #f3f4f6; padding: 2px 6px; border-radius: 3px; font-size: 13px;">${GITHUB_REF_NAME}</code></td>
                      </tr>
                      <tr style="background-color: #f9fafb;">
                        <td style="font-weight: 600; color: #374151;">Triggered by</td>
                        <td style="color: #6b7280;">${GITHUB_ACTOR}</td>
                      </tr>
                      <tr>
                        <td style="font-weight: 600; color: #374151;">Commit</td>
                        <td style="color: #6b7280;"><a href="${COMMIT_URL}" style="color: #3b82f6; text-decoration: none;">${COMMIT_SHORT}</a></td>
                      </tr>
                    </table>
                  </td>
                </tr>
                <tr>
                  <td style="padding-top: 20px;">
                    <a href="${LOGS_URL}" style="display: inline-block; background-color: #dc2626; color: #ffffff; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: 600; font-size: 14px;">
                      üîç Ver Logs de Erro
                    </a>
                  </td>
                </tr>
              </table>
            </td>
          </tr>
          <tr>
            <td style="padding: 20px; text-align: center; color: #9ca3af; font-size: 12px; border-top: 1px solid #e5e7eb;">
              Nimbloo Platform ¬∑ Deploy Automation
            </td>
          </tr>
        </table>
      </td>
    </tr>
  </table>
</body>
</html>
EOF
)
        fi

        # Create email JSON
        jq -n \
          --arg subject "$SUBJECT" \
          --arg html "$HTML" \
          '{"Subject": {"Data": $subject, "Charset": "UTF-8"}, "Body": {"Html": {"Data": $html, "Charset": "UTF-8"}}}' \
          > /tmp/email.json

        # Send email via SES
        aws ses send-email \
          --from "${NOTIFICATION_EMAIL_FROM}" \
          --destination "ToAddresses=${NOTIFICATION_EMAIL}" \
          --message file:///tmp/email.json \
          --region ${AWS_REGION} && echo "‚úÖ Email notification sent" || echo "‚ö†Ô∏è Failed to send email notification (ignored)"

        rm -f /tmp/email.json
